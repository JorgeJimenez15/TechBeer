={width:0,height:0},{chart:e,options:{ticks:s,title:n,grid:o}}=this,r=this._isVisible(),a=this.isHorizontal();if(r){const c=qi(n,e.options.font);if(a?(t.width=this.maxWidth,t.height=Et(o)+c):(t.height=this.maxHeight,t.width=Et(o)+c),s.display&&this.ticks.length){const{first:l,last:h,widest:d,highest:f}=this._getLabelSizes(),u=s.padding*2,m=ot(this.labelRotation),p=Math.cos(m),g=Math.sin(m);if(a){const b=s.mirror?0:g*d.width+p*f.height;t.height=Math.min(this.maxHeight,t.height+b+u)}else{const b=s.mirror?0:p*d.width+g*f.height;t.width=Math.min(this.maxWidth,t.width+b+u)}this._calculatePadding(l,h,g,p)}}this._handleMargins(),a?(this.width=this._length=e.width-this._margins.left-this._margins.right,this.height=t.height):(this.width=t.width,this.height=this._length=e.height-this._margins.top-this._margins.bottom)}_calculatePadding(t,e,s,n){const{ticks:{align:o,padding:r},position:a}=this.options,c=this.labelRotation!==0,l=a!=="top"&&this.axis==="x";if(this.isHorizontal()){const h=this.getPixelForTick(0)-this.left,d=this.right-this.getPixelForTick(this.ticks.length-1);let f=0,u=0;c?l?(f=n*t.width,u=s*e.height):(f=s*t.height,u=n*e.width):o==="start"?u=e.width:o==="end"?f=t.width:o!=="inner"&&(f=t.width/2,u=e.width/2),this.paddingLeft=Math.max((f-h+r)*this.width/(this.width-h),0),this.paddingRight=Math.max((u-d+r)*this.width/(this.width-d),0)}else{let h=e.height/2,d=t.height/2;o==="start"?(h=0,d=t.height):o==="end"&&(h=e.height,d=0),this.paddingTop=h+r,this.paddingBottom=d+r}}_handleMargins(){this._margins&&(this._margins.left=Math.max(this.paddingLeft,this._margins.left),this._margins.top=Math.max(this.paddingTop,this._margins.top),this._margins.right=Math.max(this.paddingRight,this._margins.right),this._margins.bottom=Math.max(this.paddingBottom,this._margins.bottom))}afterFit(){T(this.options.afterFit,[this])}isHorizontal(){const{axis:t,position:e}=this.options;return e==="top"||e==="bottom"||t==="x"}isFullSize(){return this.options.fullSize}_convertTicksToLabels(t){this.beforeTickToLabelConversion(),this.generateTickLabels(t);let e,s;for(e=0,s=t.length;e<s;e++)C(t[e].label)&&(t.splice(e,1),s--,e--);this.afterTickToLabelConversion()}_getLabelSizes(){let t=this._labelSizes;if(!t){const e=this.options.ticks.sampleSize;let s=this.ticks;e<s.length&&(s=Xi(s,e)),this._labelSizes=t=this._computeLabelSizes(s,s.length,this.options.ticks.maxTicksLimit)}return t}_computeLabelSizes(t,e,s){const{ctx:n,_longestTextCache:o}=this,r=[],a=[],c=Math.floor(e/Yi(e,s));let l=0,h=0,d,f,u,m,p,g,b,x,S,P,_;for(d=0;d<e;d+=c){if(m=t[d].label,p=this._resolveTickFontOptions(d),n.font=g=p.string,b=o[g]=o[g]||{data:{},gc:[]},x=p.lineHeight,S=P=0,!C(m)&&!E(m))S=ve(n,b.data,b.gc,S,m),P=x;else if(E(m))for(f=0,u=m.length;f<u;++f)_=m[f],!C(_)&&!E(_)&&(S=ve(n,b.data,b.gc,S,_),P+=x);r.push(S),a.push(P),l=Math.max(S,l),h=Math.max(P,h)}Zr(o,e);const v=r.indexOf(l),y=a.indexOf(h),k=w=>({width:r[w]||0,height:a[w]||0});return{first:k(0),last:k(e-1),widest:k(v),highest:k(y),widths:r,heights:a}}getLabelForValue(t){return t}getPixelForValue(t,e){return NaN}getValueForPixel(t){}getPixelForTick(t){const e=this.ticks;return t<0||t>e.length-1?null:this.getPixelForValue(e[t].value)}getPixelForDecimal(t){this._reversePixels&&(t=1-t);const e=this._startPixel+t*this._length;return Vn(this._alignToPixels?lt(this.chart,e,0):e)}getDecimalForPixel(t){const e=(t-this._startPixel)/this._length;return this._reversePixels?1-e:e}getBasePixel(){return this.getPixelForValue(this.getBaseValue())}getBaseValue(){const{min:t,max:e}=this;return t<0&&e<0?e:t>0&&e>0?t:0}getContext(t){const e=this.ticks||[];if(t>=0&&t<e.length){const s=e[t];return s.$context||(s.$context=Jr(this.getContext(),t,s))}return this.$context||(this.$context=Qr(this.chart.getContext(),this))}_tickSize(){const t=this.options.ticks,e=ot(this.labelRotation),s=Math.abs(Math.cos(e)),n=Math.abs(Math.sin(e)),o=this._getLabelSizes(),r=t.autoSkipPadding||0,a=o?o.widest.width+r:0,c=o?o.highest.height+r:0;return this.isHorizontal()?c*s>a*n?a/s:c/n:c*n<a*s?c/s:a/n}_isVisible(){const t=this.options.display;return t!=="auto"?!!t:this.ge